'''
Author: TOTHTOT 37585883+TOTHTOT@users.noreply.github.com
Date: 2025-02-15 22:47:52
LastEditors: TOTHTOT 37585883+TOTHTOT@users.noreply.github.com
LastEditTime: 2025-02-20 21:52:37
FilePath: \ele_ds\components\SConscript
Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
'''
import os
Import('RTT_ROOT')
from building import *

# 获取当前工作目录
cwd = GetCurrentDir()
objs = []

# 定义一个递归函数，遍历目录和子目录，查找所有的 .c 文件
def search_c_files_in_dir(directory):
    # 获取目录下的所有文件和文件夹
    list = os.listdir(directory)
    
    # 存储当前目录下的所有.c文件路径
    src_files = []
    
    # 遍历文件和文件夹
    for d in list:
        path = os.path.join(directory, d)
        
        # 如果是文件夹，递归调用
        if os.path.isdir(path):
            src_files.extend(search_c_files_in_dir(path))
        elif path.endswith('.c'):
            # 如果是.c文件，添加到文件列表
            src_files.append(path)
    
    return src_files

# 查找所有子目录中的 .c 文件
src_files = search_c_files_in_dir(cwd)

# 遍历所有找到的 .c 文件
for src in src_files:
    # 获取当前目录的路径（不包括文件名）
    path = os.path.dirname(src)
    
    # 设置当前的路径到 CPPPATH
    CPPPATH = [path, str(Dir('#'))]
    
    # 获取当前目录的文件名（不包括路径）
    filename_without_path = os.path.basename(os.path.normpath(path))
    
    # 创建新的组名，例如当前目录是 aes ，则组名为 Module_aes
    group_name = 'Components'
    print("group_name: " + group_name)
    
    # 使用新的组名定义组，并添加进对象列表中
    objs = objs + DefineGroup(group_name, [src], depend=[], CPPPATH=CPPPATH)

Return('objs')
